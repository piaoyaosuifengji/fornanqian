//*******************************************************************
//** 版权:     利尔达科技有限公司
//** 文件名:   msp430F2619_clk.s43
//** 版本：    V1.0
//** 工作环境: IAR Embedded Workbench IDE 4.11A
//** 作者:     谷雨
//** 生成日期: 2008.11.19
//** 功能:     P5.6口输出ACLK时钟，频率为32768HZ
//**           P5.5口输出SMCLK时钟，频率为XT2频率二分频，即8MHZ
//**           P5.4口输出MCLK时钟，频率为DCO频率二分频，即4MHZ
//** 相关文件:  
//** 修改日志: 无
//**相关说明： 在本系统中，XT1外接32768Hz晶振，XT2外接16MHz晶振
//*******************************************************************

#include "msp430x26x.h"

            RSEG    CSTACK                  ; 定义堆栈区
;-------------------------------------------------------------------------------
            RSEG    CODE                    ; 定义程序段
;-------------------------------------------------------------------------------
RESET       mov.w   #SFE(CSTACK),SP         ; 初始化堆栈
StopWDT     mov.w   #WDTPW+WDTHOLD,&WDTCTL  ; 停止看门狗
SetupP5     bis.b   #070h,&P5DIR            ; P5.6,5,4 输出
            bis.b   #070h,&P5SEL            ; P5.6,5,4 第二功能选择
            calla   #Init_Clk
            
Mainloop    NOP
            jmp     Mainloop    

;-------------------------------------------------- 
;--------------    时钟初始化   -------------------
;-------------------------------------------------- 
Init_Clk    mov.b   &CALBC1_8MHZ,&BCSCTL1   ; 设置DCO时钟为8MHZ
            mov.b   &CALDCO_8MHZ,&DCOCTL    
            mov.b   #DIVM_1 + SELS + DIVS_1,&BCSCTL2
                                            ;MCLK时钟为DCO/2，SMCLK时钟为XT2CLK/2
            mov.b   #XT2S_2,&BCSCTL3        ;XT2范围选择3~16MHZ
            bic.b   #XT2OFF,&BCSCTL1        ;开XT2
xt2_clr     bic.b   #OFIFG,&IFG1            ;清失效标志
            mov.w   0x05ff,R15              ;延时等待
delay       dec.b   R15
            jnz     delay
            bit.b   #OFIFG,&IFG1           ;检测晶振失效位
            jc      xt2_clr
            ret
                                      
        

;------------------------------------------------------------------------------
            COMMON  INTVEC        
;------------------------------------------------------------------------------
            ORG     RESET_VECTOR                  ; 复位向量
            DW      RESET                   
            END
