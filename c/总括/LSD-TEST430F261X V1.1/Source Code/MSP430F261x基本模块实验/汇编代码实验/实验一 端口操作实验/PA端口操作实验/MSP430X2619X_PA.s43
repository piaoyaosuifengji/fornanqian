/*******************************************************************************
// 版权:   杭州利尔达科技有限公司
// 文件名:MSP430F261x_PA.c
// 版本：V1.0
// 工作环境:IAR Embedded Workbench Evaluation for MSP430 4.10A
// 作者:Huanglongsong
// 描述：MSP430F261x演示程序，向PA(P7、P8)写入一个字的操作，通过
//       看门狗定时唤醒CPU，每唤醒一次改变一次PAOUT的状态,在
//       LSD_TESTMSP430F261x学习板上能看到PA端口的LED状态!
//   ACLK = 32.768kHz, MCLK = SMCLK = default DCO
//
//                MSP430F261x
//             -----------------
//         /|\|                 |
//          | |                 |
//          --|RST         PA.0 |-- LED
//            |             |   | |
//            |             |   | |
//            |           PA.15 |-- LED
//
// 时间：2008年12月
//
******************************************************************************/
#include  <msp430x26x.h>
;-------------------------------------------------------------------------------
            RSEG    CSTACK                  ; 定义程序代码段
;-------------------------------------------------------------------------------
            RSEG    CODE                    ; 定义程序段
;-----------------------------------------------------------------------------
RESET       mov.w   #SFE(CSTACK),SP         ; 初始化堆栈指针
StopWDT     mov.w   #WDT_ADLY_250,&WDTCTL   ; 定义WDT的工作模式
            bis.b   #WDTIE, &IE1
            bic.b   #BIT2,&P3OUT            ; 开启电源
            bis.b   #BIT2,&P3DIR            ; 设置为输出
            mov.w   #0aaaah,&PAOUT
            bis.w   #0FFFFh,&PADIR          ; PA.x 输出
            bic.w   #0FFFFh,&PASEL
Mainloop 
            xor     #0FFFFh,&PAOUT          ; 异或改变PA输出状态
            bis.w   #LPM3 + GIE,SR          ; LPM3
            nop                             ; 
            jmp     Mainloop
WDT_ISR     
            bic.w   #LPM3 + GIE,0(SP)          ; LPM3
            reti
                                            ;
;------------------------------------------------------------------------------
            COMMON  INTVEC                  ; 中断向量
;------------------------------------------------------------------------------
            ORG     RESET_VECTOR            ; 复位向量
            DW      RESET                   ;
            ORG     WDT_VECTOR
            DW      WDT_ISR
            END
