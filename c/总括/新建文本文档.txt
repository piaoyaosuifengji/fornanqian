#include  <msp430x26x.h>

void main(void)
{
  WDTCTL = WDTPW + WDTHOLD;                 // 停看门狗
  P5DIR |= BIT7;                            // P5.7为输出模式
  CCTL0 = CCIE;                             // CCR0 中断使能
  CCR0 = 50000;
  TACTL = TASSEL_2 + MC_2;                  // SMCLK, 连续计数模式

  _BIS_SR(LPM0_bits + GIE);                 // 关CPU,使能总中断
}

// Timer A0 中断服务子程序
#pragma vector=TIMERA0_VECTOR
__interrupt void Timer_A (void)
{
  P5OUT ^= BIT7;                            // 翻转LED状态
  CCR0 += 50000;                            // 添加CCR0偏移量
}

#include  <msp430x26x.h>

void main(void)
{
    WDTCTL = WDTPW + WDTHOLD;                 // 停看门狗
    P5DIR |= BIT7;                            // P5.7为输出模式
    TBR = 50000;                              // TBR从此值基础上开始计数
    TBCTL = TBSSEL_1 + MC_2 + TBIE;           // TB时钟来自ACLK,连续计数模式，开中断
    _BIS_SR(LPM3_bits + GIE);                 // 进入LPM3,开总中断
}

// Timer_B7 多源中断处理
#pragma vector=TIMERB1_VECTOR
__interrupt void Timer_B(void)
{
    switch( TBIV )
    {
    case  2: break;                          // CCR1 不用
    case  4: break;                          // CCR2 不用
    case 14: P5OUT ^= BIT7;                  // TBR计数益出
    break;
    }
    TBR = 50000;                             // 初始化基计数值
    TBCTL &= ~TBIFG;
}






